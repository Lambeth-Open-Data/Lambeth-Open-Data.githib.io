graph_aspect_ratio = 0.75 # ratio between height/width
l_dat <- function(path, start_row = 2, percentage_cut_off = 0.5){
df <- read.xlsx(path, startRow = start_row) %>% data.table()
# Remove rows with no data
df <- df[!is.na(df[[1]]),]
df <- df[!is.na(df[[2]]),]
# Remove rows where column 1 contains Total
df <- df[!grepl("Total", df[[1]]),]
# Remove everything before : in column names
names(df) = gsub(".*:", "", names(df))
#print(names(df))
# Replace . in column names with " "
names(df) = gsub("\\.", " ", names(df))
#print(names(df))
# Replace column name X3 with Lambeth %
names(df)[3] = "Lambeth %"
names(df)[5] = "England %"
names(df)[7] = "London %"
# Melt table with first column as id
df_m <- melt(df, id.vars = names(df)[1], variable.name = "Area name", value.name = "Value")
# Create percentage column from if 'Area name' contains %
df_m[, `Percentage` := ifelse(grepl("%", `Area name`), TRUE, FALSE)]
# Replace ' %' in Area name with ''
df_m[, `Area name` := gsub(" %", "", `Area name`)]
# Make Value a numeric column
df_m[, `Value` := as.numeric(`Value`)]
# Make Area name an ordered factor with Lambeth, London, England
df_m[, `Area name` := ordered(`Area name`, levels = c("Lambeth", "London", "England"))]
print(df_m)
cat_col <- names(df)[1]
dc_formula <- paste0("`",cat_col,"` + ","`Area name`", " ~ ", "Percentage")
# dcast table with first column and Area name on left, percentage on right, Value as value column
df_d <- dcast(df_m, dc_formula, value.var = "Value", fun.aggregate = mean)
# Rename column FALSE to Population
names(df_d)[3] = "Population"
# Rename column TRUE to Percentage
names(df_d)[4] = "Percentage"
# Create new df for Area name = Lambeth
df_lambeth <- df_d[df_d$`Area name` == "Lambeth",]
# Keep only categories of at least X% of the population (default 0.5%)
df_lambeth <- df_lambeth[df_lambeth$`Percentage` >= percentage_cut_off,]
# Order df_lambeth descending by Percentage
df_lambeth <- df_lambeth[order(-df_lambeth$`Percentage`),]
# Create variable from first column
cat_order <- as.data.frame(df_lambeth)[,1]
#col <- names(df_lambeth)[1]
#cat_order <- df_lambeth[,col, with=F]
#print(cat_order)
# In df_d set column 1 as ordered factor with levels cat_order
df_d[, (1) := lapply(.SD, ordered, levels=cat_order), .SDcols = 1]
# filter df_d by column 1 for NAs
df_d <- df_d[!is.na(df_d[[1]]),]
# order df_d by column 1 and `Area name`
df_d <- df_d[order(`Area name`, -Percentage),]
out_stuff <- list(df_d, cat_order)
return(out_stuff)
}
path_2022 = paste(c(dir_stub, "../data/Res survey/res_survey_2022_filt.xlsx"),collapse = '')
create_surv_q_df = function(sheet_name, path = path_2022, start_text = "test col x vs y and z", end_text_select = 1){
# Read in the Excel file and extract the data from the sheet specified by sheet_name
surv_sat <- read.xlsx(path, startRow = 2, sheet=sheet_name) %>% data.table()
# Select the first two columns
surv_sat <- surv_sat[,1:2]
# Take the first column name and store as a variable
question <- names(surv_sat)[1]
# Rename first column to 'Response'
names(surv_sat)[1] = "Response"
# Filter column 1 to keep rows in between 'x?yz: test col x vs y and z' and 'Don't know'
surv_sat_f <- surv_sat[(grep(start_text, Response, fixed=T)+1):(grep("Donâ€™t know|Prefer not to say", Response, fixed = F)[end_text_select]-1)]
# Filter column 1 to remove NA
surv_sat_f <- surv_sat_f[!is.na(Response)]
# Rename X2 to 'Percentage of respondents'
names(surv_sat_f)[2] = "Percentage of respondents"
# Replace numbers in square brackets in the Response column with the corresponding word
surv_sat_f[,Response := gsub("(\\[\\d\\] )", "", Response)]
# Multiply Percentage of respondents by 100 to get percentage
surv_sat_f[, `Percentage of respondents` := round(as.numeric(`Percentage of respondents`) * 100, 1)]
# Make column 'Question' with values from question
surv_sat_f[, Question := question]
# Remove 'Q:' from Question
surv_sat_f[, Question := gsub("Q:", "", Question)]
# Remove Q from Question
surv_sat_f[, Question := gsub("(^Q[A-Za-z0-9]+)", "", Question, fixed=F)]
# Remove Q from Question
surv_sat_f[, Question := gsub("(^_[A-Za-z0-9]+)", "", Question, fixed=F)]
# Replace . in Question with space
surv_sat_f[, Question := gsub("\\.", " ", Question)]
# Replace . in Question with space
surv_sat_f[, Question := stringr::str_trim(Question)]
return(surv_sat_f)
}
make_surv_graph_facets <- function(df, ncols = 3, nrows = 1, title_wrap = 50){
graph <- ggplot(df, aes(y = `Percentage of respondents`, x =  Response, fill = Question,
text= paste("Question: ", Question, "<br>",
"Response: ", Response, "<br>",
"Percentage of respondents: ",prettyNum(`Percentage of respondents`,big.mark=",", preserve.width="none")
))
) +
geom_col(position = position_dodge2(width = 0.9))+#, fill = "#ff9900")+#, reverse = T)) +
scale_fill_discrete(type=lambeth_palette_graph) +
theme_lam() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none"
) +
scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 40)) +
#scale_y_continuous(labels = scales::comma) +
ylab("Percentage of respondents") +
facet_wrap(~Question, scales = "free_x", labeller = labeller(Question = label_wrap_gen(title_wrap)), nrow = nrows, ncol = ncols)
#facet_grid(~Question, scales = "free_x", labeller = labeller(Question = label_wrap_gen(40)), )
return(graph)
}
make_surv_graph_time_facets <- function(df, ncols = 3, nrows = 1, title_wrap = 50){
graph <- ggplot(df, aes(y = `Percentage of respondents`, x =  Year,
colour = `Response group`, group = `Response group`,
linetype = `Response group`,
text= paste("Question: ", Question, "<br>",
"Response: ", `Response group`, "<br>",
"Percentage of respondents: ",prettyNum(`Percentage of respondents`,big.mark=",", preserve.width="none")
))
) +
geom_point()+#, fill = "#ff9900")+#, reverse = T)) +
geom_line() +
scale_colour_discrete(type=lambeth_palette_graph) +
theme_lam() +
theme(#axis.title.x = element_blank(),
axis.title.y = element_blank(),
#axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)#,
#legend.position = "none"
) +
#scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 40)) +
#scale_y_continuous(labels = scales::comma) +
ylab("Percentage of respondents") +
facet_wrap(~Question, scales = "free_x", labeller = labeller(Question = label_wrap_gen(title_wrap)),
nrow = nrows, ncol = ncols)
#facet_grid(~Question, scales = "free_x", labeller = labeller(Question = label_wrap_gen(40)), )
return(graph)
}
q08 <- create_surv_q_df("Q08")
q091 <- create_surv_q_df("Q09_1")
q092 <- create_surv_q_df("Q09_2")
q093 <- create_surv_q_df("Q09_3")
q094 <- create_surv_q_df("Q09_4")
View(q08)
# Join all dataframes
surv_sat_f_local <- rbind(q08, q091, q092, q093, q094)
# Residents survey results ----------------------------------------------------
# Load data
q01 <- create_surv_q_df("Q01_1")
q02 <- create_surv_q_df("Q02_1")
q03 <- create_surv_q_df("Q03_1")
q04 <- create_surv_q_df("Q04_1")
q05 <- create_surv_q_df("Q05_1")
q06 <- create_surv_q_df("Q06_1")[1:10] #%>% filter(`Percentage of respondents` >= 5)
q07 <- create_surv_q_df("Q07_1")[1:10] #%>% filter(`Percentage of respondents` >= 5)
# The following is the avoid having bars turn up in the wrong order in the second graph of graph page two, as there are duplicated response titles that should be placed differently
# Add a space to each row of the Response column
q07$Response = paste0(q07$Response, " ")
#q07[, Response := gsub("Clean streets", "Clean streets ", Response)]
#q07[, Response := gsub("The level of crime", "The level of crime ", Response)]
# Join all dataframes
surv_sat_f_general <- rbind(q01, q02, q03, q04, q05, q06, q07)
# Create a variable of the Response column with duplicates removed
Response_unique <- unique(surv_sat_f_general$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_general[, Response := ordered(Response, levels = Response_unique)]
# Create graph of Percentage of respondents by Response in ggplot2
surv_sat_f_general_graph <- make_surv_graph_facets(surv_sat_f_general[Question %in% unique(surv_sat_f_general$Question)[1:5]], ncols=5, title_wrap = 35)
#surv_sat_f_general_graph
surv_sat_f_general_graph_2 <- make_surv_graph_facets(surv_sat_f_general[Question %in% unique(surv_sat_f_general$Question)[6:7]], ncols=2)
#surv_sat_f_general_graph_2
# Neighbourhood specific resident survey results ----------------------------------------------------
q08 <- create_surv_q_df("Q08")
q091 <- create_surv_q_df("Q09_1")
q092 <- create_surv_q_df("Q09_2")
q093 <- create_surv_q_df("Q09_3")
q094 <- create_surv_q_df("Q09_4")
# Join all dataframes
surv_sat_f_local <- rbind(q08, q091, q092, q093, q094)
surv_sat_f_local$Question = gsub("Please say how strongly you agree or disagree with each of the following statements - ", "", surv_sat_f_local$Question)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_local$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_local[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_graph_local <- make_surv_graph_facets(surv_sat_f_local, ncols=5, title_wrap = 35)
surv_sat_f_graph_local
# Crime related survey results ----------------------------------------------------
# Crime related qs 	77	Q015_1
#78	Q015_2
#79	Q1Y22
#80	Q2Y22
# Safe walking during the day/evening
q015_1 = create_surv_q_df("Q015_1")
q015_2 = create_surv_q_df("Q015_2")
# Confidence in police
q1y22 = create_surv_q_df("Q1Y22")
# Subject to harassment
q2y22 = create_surv_q_df("Q2Y22")
# Join all dataframes
surv_sat_f_crime <- rbind(q015_1, q015_2, q1y22, q2y22)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_crime$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_crime[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_crime_graph <- make_surv_graph_facets(surv_sat_f_crime, ncols=4, title_wrap = 40)
surv_sat_f_crime_graph
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/Tables_LBL6182_v13_weighted_tablesonseparatesheets 2021.xlsx"),collapse = '')
# Safety in day/night
q015_1_21 = create_surv_q_df("Q015_1", path_2021)
q015_2_21 = create_surv_q_df("Q015_2", path_2021)
#
path_2020 = paste(c(dir_stub, "../data/Res survey/LBL6182 Tables_Weighted&Segments Appended_Version 6 2020.xlsx"),collapse = '')
# Safety in day/night
q015_1_20 = create_surv_q_df("Q013", path_2020)[, Question := "Q015_1  To what extent would you say you are, or would be, safe from crime when walking in your local area   ? - During the day -"]
q015_2_20 = create_surv_q_df("Q013", path_2020, start_text = "Q013.A.2. In the evening -", end_text_select = 2)[, Question := "Q015_2  To what extent would you say you are, or would be, safe from crime when walking in your local area   ? - In the evening -"]
surv_sat_f_crime_22 <- rbind(q015_1, q015_2) %>% cbind(2022) %>% setnames("V2", "Year")
surv_sat_f_crime_21 <- rbind(q015_1_21, q015_2_21) %>% cbind(2021) %>% setnames("V2", "Year")
surv_sat_f_crime_20 <- rbind(q015_1_20, q015_2_20) %>% cbind(2020) %>% setnames("V2", "Year")
names(surv_sat_f_crime_22)
names(surv_sat_f_crime_21)
surv_sat_f_crime_all <- rbind(surv_sat_f_crime_22, surv_sat_f_crime_21, surv_sat_f_crime_20)
surv_sat_f_crime_all$Response = gsub("\\[.*\\]", "", surv_sat_f_crime_all$Response)
surv_sat_f_crime_all$Response = gsub(" -.*", "", surv_sat_f_crime_all$Response) %>% trimws()
surv_sat_f_crime_all$Question = gsub("^Q([^ ]+)  ", "", surv_sat_f_crime_all$Question) %>% trimws()
surv_sat_f_crime_all$Question = gsub("\\s\\s+", "", surv_sat_f_crime_all$Question) %>% trimws()
surv_sat_f_crime_all = surv_sat_f_crime_all[!is.na(`Percentage of respondents`)]
# Group together the 0123, 456, 78910 responses as generally high/med/low
surv_sat_f_crime_all[, `Response group` := Response]
Response_unique_loc_all <- unique(surv_sat_f_crime_all$`Response group`)
surv_sat_f_crime_all[, `Response group` := ordered(`Response group`, levels = Response_unique_loc_all)]
surv_sat_f_crime_all_grp <- surv_sat_f_crime_all[,.(`Percentage of respondents`=sum(`Percentage of respondents`)), by = c("Year","Question","Response group")]
# Graph for past three years
surv_sat_f_crime_time_graph <- make_surv_graph_time_facets(surv_sat_f_crime_all_grp, ncols=2, nrows=1, title_wrap = 40)
surv_sat_f_crime_time_graph
#ggplotly(surv_sat_f_crime_time_graph)
# Health/Wellbeing survey results ----------------------------------------------------
# Health/Wellbeing Qs  108	Q029
#109	Q030
#110	Q031
q029 = create_surv_q_df("Q029")[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030 = create_surv_q_df("Q030")[,Question:= "How anxious did you feel yesterday?"]
q031 = create_surv_q_df("Q031")[,Question:= "How is your health in general?"]
# The following is the avoid having bars turn up in the wrong order in the second graph of graph page two, as there are duplicated response titles that should be placed differently
# Add a space to each row of the Response column
q030$Response = paste0(q030$Response, " ")
# Join all dataframes
surv_sat_f_health <- rbind(q029, q030, q031) %>% cbind(2022) %>% setnames("V2", "Year")
# Remove anything between square brackets in Responses
surv_sat_f_health$Response = gsub("\\[.*\\]", "", surv_sat_f_health$Response)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_health$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_health[, Response := ordered(Response, levels = Response_unique_loc)]
# Make 2022 graph
surv_sat_f_health_graph <- make_surv_graph_facets(surv_sat_f_health, ncols=3, title_wrap = 40)
surv_sat_f_health_graph
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/Tables_LBL6182_v13_weighted_tablesonseparatesheets 2021.xlsx"),collapse = '')
q029_21 = create_surv_q_df("Q029", path_2021)[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030_21 = create_surv_q_df("Q030", path_2021)[,Question:= "How anxious did you feel yesterday?"]
q031_21 = create_surv_q_df("Q031", path_2021)[,Question:= "How is your health in general?"]
path_2020 = paste(c(dir_stub, "../data/Res survey/LBL6182 Tables_Weighted&Segments Appended_Version 6 2020.xlsx"),collapse = '')
q029_20 = create_surv_q_df("Q027", path_2020)[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030_20 = create_surv_q_df("Q029", path_2020)[,Question:= "How anxious did you feel yesterday?"]
q031_20 = create_surv_q_df("Q030", path_2020)[,Question:= "How is your health in general?"]
surv_sat_f_health_21 <- rbind(q029_21, q030_21, q031_21) %>% cbind(2021) %>% setnames("V2", "Year")
surv_sat_f_health_20 <- rbind(q029_20, q030_20, q031_20) %>% cbind(2020) %>% setnames("V2", "Year")
surv_sat_f_health_all <- rbind(surv_sat_f_health, surv_sat_f_health_21, surv_sat_f_health_20)
surv_sat_f_health_all$Response = gsub("\\[.*\\]", "", surv_sat_f_health_all$Response)
surv_sat_f_health_all$Response = gsub(" -.*", "", surv_sat_f_health_all$Response) %>% trimws()
# Can't compare the 'how is your health is general' question over time as the responses have changed significantly. I will remove it from the time series.
surv_sat_f_health_all <- surv_sat_f_health_all[Question != "How is your health in general?"]
# Group together the 0123, 456, 78910 responses as generally high/med/low
surv_sat_f_health_all[, `Response group` := cut(as.numeric(Response), breaks=c(-1, 3, 6, 11), labels = c("Not at all / not much (0-3)", "Somewhat (4-6)", "Quite a lot / a lot (7-10)"))
]
Response_unique_loc_all <- unique(surv_sat_f_health_all$`Response group`)
surv_sat_f_health_all[, `Response group` := ordered(`Response group`, levels = Response_unique_loc_all)]
surv_sat_f_health_all_grp <- surv_sat_f_health_all[,.(`Percentage of respondents`=sum(`Percentage of respondents`)), by = c("Year","Question","Response group")]
# Graph for past three years
surv_sat_f_health_time_graph <- make_surv_graph_time_facets(surv_sat_f_health_all_grp, ncols=2, nrows=1, title_wrap = 40)
surv_sat_f_health_time_graph
ggplotly(surv_sat_f_health_time_graph)
# Cost of living survey results ----------------------------------------------------
# Cost of living Qs Q032
#Q4AY22_1
#Q4AY22_2
#Q4AY22_3
q032 = create_surv_q_df("Q032")
q4ay22_1 = create_surv_q_df("Q4AY22_1")
q4ay22_2 = create_surv_q_df("Q4AY22_2")
q4ay22_3 = create_surv_q_df("Q4AY22_3")
# Join all dataframes
surv_sat_f_cost <- rbind(q032, q4ay22_1, q4ay22_2, q4ay22_3)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- rev(unique(surv_sat_f_cost$Response))
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_cost[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_cost_graph <- make_surv_graph_facets(surv_sat_f_cost, ncols=4, title_wrap = 35)
surv_sat_f_cost_graph
# Internet connection survey results ----------------------------------------------------
q038 <- create_surv_q_df("Q038")
# Join all dataframes
surv_sat_f_tintenet <- q038
surv_sat_f_tintenet$Question = gsub("^Q([^ ]+)  ", "", surv_sat_f_tintenet$Question) %>% trimws()
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_tintenet$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_tintenet[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_tintenet = surv_sat_f_tintenet[Response != "At work"]
surv_sat_f_graph_tintenet <- make_surv_graph_facets(surv_sat_f_tintenet, ncols=5, title_wrap = 100)
surv_sat_f_graph_tintenet
#ggplotly(surv_sat_f_graph_tintenet)
# Neighbourhood specific resident survey results ----------------------------------------------------
q08 <- create_surv_q_df("Q08")
q091 <- create_surv_q_df("Q09_1")
q092 <- create_surv_q_df("Q09_2")
q093 <- create_surv_q_df("Q09_3")
q094 <- create_surv_q_df("Q09_4")
# Join all dataframes
surv_sat_f_local <- rbind(q08, q091, q092, q093, q094)
surv_sat_f_local$Question = gsub("Please say how strongly you agree or disagree with each of the following statements - ", "", surv_sat_f_local$Question)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_local$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_local[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_graph_local <- make_surv_graph_facets(surv_sat_f_local, ncols=5, title_wrap = 35)
surv_sat_f_graph_local
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/res_survey_2021_filt.xlsx"),collapse = '')
# Safety in day/night
q015_1_21 = create_surv_q_df("Q015_1", path_2021)
q015_2_21 = create_surv_q_df("Q015_2", path_2021)
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/res_survey_2021_filt.xlsx"),collapse = '')
q029_21 = create_surv_q_df("Q029", path_2021)[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030_21 = create_surv_q_df("Q030", path_2021)[,Question:= "How anxious did you feel yesterday?"]
q031_21 = create_surv_q_df("Q031", path_2021)[,Question:= "How is your health in general?"]
# Residents survey results ----------------------------------------------------
# Load data
q01 <- create_surv_q_df("Q01_1")
q02 <- create_surv_q_df("Q02_1")
q03 <- create_surv_q_df("Q03_1")
q04 <- create_surv_q_df("Q04_1")
q05 <- create_surv_q_df("Q05_1")
q06 <- create_surv_q_df("Q06_1")[1:10] #%>% filter(`Percentage of respondents` >= 5)
q07 <- create_surv_q_df("Q07_1")[1:10] #%>% filter(`Percentage of respondents` >= 5)
# The following is the avoid having bars turn up in the wrong order in the second graph of graph page two, as there are duplicated response titles that should be placed differently
# Add a space to each row of the Response column
q07$Response = paste0(q07$Response, " ")
#q07[, Response := gsub("Clean streets", "Clean streets ", Response)]
#q07[, Response := gsub("The level of crime", "The level of crime ", Response)]
# Join all dataframes
surv_sat_f_general <- rbind(q01, q02, q03, q04, q05, q06, q07)
# Create a variable of the Response column with duplicates removed
Response_unique <- unique(surv_sat_f_general$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_general[, Response := ordered(Response, levels = Response_unique)]
# Create graph of Percentage of respondents by Response in ggplot2
surv_sat_f_general_graph <- make_surv_graph_facets(surv_sat_f_general[Question %in% unique(surv_sat_f_general$Question)[1:5]], ncols=5, title_wrap = 35)
#surv_sat_f_general_graph
surv_sat_f_general_graph_2 <- make_surv_graph_facets(surv_sat_f_general[Question %in% unique(surv_sat_f_general$Question)[6:7]], ncols=2)
#surv_sat_f_general_graph_2
# Neighbourhood specific resident survey results ----------------------------------------------------
q08 <- create_surv_q_df("Q08")
q091 <- create_surv_q_df("Q09_1")
q092 <- create_surv_q_df("Q09_2")
q093 <- create_surv_q_df("Q09_3")
q094 <- create_surv_q_df("Q09_4")
# Join all dataframes
surv_sat_f_local <- rbind(q08, q091, q092, q093, q094)
surv_sat_f_local$Question = gsub("Please say how strongly you agree or disagree with each of the following statements - ", "", surv_sat_f_local$Question)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_local$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_local[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_graph_local <- make_surv_graph_facets(surv_sat_f_local, ncols=5, title_wrap = 35)
surv_sat_f_graph_local
# Crime related survey results ----------------------------------------------------
# Crime related qs 	77	Q015_1
#78	Q015_2
#79	Q1Y22
#80	Q2Y22
# Safe walking during the day/evening
q015_1 = create_surv_q_df("Q015_1")
q015_2 = create_surv_q_df("Q015_2")
# Confidence in police
q1y22 = create_surv_q_df("Q1Y22")
# Subject to harassment
q2y22 = create_surv_q_df("Q2Y22")
# Join all dataframes
surv_sat_f_crime <- rbind(q015_1, q015_2, q1y22, q2y22)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_crime$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_crime[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_crime_graph <- make_surv_graph_facets(surv_sat_f_crime, ncols=4, title_wrap = 40)
surv_sat_f_crime_graph
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/res_survey_2021_filt.xlsx"),collapse = '')
# Safety in day/night
q015_1_21 = create_surv_q_df("Q015_1", path_2021)
q015_2_21 = create_surv_q_df("Q015_2", path_2021)
#
path_2020 = paste(c(dir_stub, "../data/Res survey/res_survey_2020_filt.xlsx"),collapse = '')
# Safety in day/night
q015_1_20 = create_surv_q_df("Q013", path_2020)[, Question := "Q015_1  To what extent would you say you are, or would be, safe from crime when walking in your local area   ? - During the day -"]
q015_2_20 = create_surv_q_df("Q013", path_2020, start_text = "Q013.A.2. In the evening -", end_text_select = 2)[, Question := "Q015_2  To what extent would you say you are, or would be, safe from crime when walking in your local area   ? - In the evening -"]
surv_sat_f_crime_22 <- rbind(q015_1, q015_2) %>% cbind(2022) %>% setnames("V2", "Year")
surv_sat_f_crime_21 <- rbind(q015_1_21, q015_2_21) %>% cbind(2021) %>% setnames("V2", "Year")
surv_sat_f_crime_20 <- rbind(q015_1_20, q015_2_20) %>% cbind(2020) %>% setnames("V2", "Year")
names(surv_sat_f_crime_22)
names(surv_sat_f_crime_21)
surv_sat_f_crime_all <- rbind(surv_sat_f_crime_22, surv_sat_f_crime_21, surv_sat_f_crime_20)
surv_sat_f_crime_all$Response = gsub("\\[.*\\]", "", surv_sat_f_crime_all$Response)
surv_sat_f_crime_all$Response = gsub(" -.*", "", surv_sat_f_crime_all$Response) %>% trimws()
surv_sat_f_crime_all$Question = gsub("^Q([^ ]+)  ", "", surv_sat_f_crime_all$Question) %>% trimws()
surv_sat_f_crime_all$Question = gsub("\\s\\s+", "", surv_sat_f_crime_all$Question) %>% trimws()
surv_sat_f_crime_all = surv_sat_f_crime_all[!is.na(`Percentage of respondents`)]
# Group together the 0123, 456, 78910 responses as generally high/med/low
surv_sat_f_crime_all[, `Response group` := Response]
Response_unique_loc_all <- unique(surv_sat_f_crime_all$`Response group`)
surv_sat_f_crime_all[, `Response group` := ordered(`Response group`, levels = Response_unique_loc_all)]
surv_sat_f_crime_all_grp <- surv_sat_f_crime_all[,.(`Percentage of respondents`=sum(`Percentage of respondents`)), by = c("Year","Question","Response group")]
# Graph for past three years
surv_sat_f_crime_time_graph <- make_surv_graph_time_facets(surv_sat_f_crime_all_grp, ncols=2, nrows=1, title_wrap = 40)
surv_sat_f_crime_time_graph
#ggplotly(surv_sat_f_crime_time_graph)
# Health/Wellbeing survey results ----------------------------------------------------
# Health/Wellbeing Qs  108	Q029
#109	Q030
#110	Q031
q029 = create_surv_q_df("Q029")[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030 = create_surv_q_df("Q030")[,Question:= "How anxious did you feel yesterday?"]
q031 = create_surv_q_df("Q031")[,Question:= "How is your health in general?"]
# The following is the avoid having bars turn up in the wrong order in the second graph of graph page two, as there are duplicated response titles that should be placed differently
# Add a space to each row of the Response column
q030$Response = paste0(q030$Response, " ")
# Join all dataframes
surv_sat_f_health <- rbind(q029, q030, q031) %>% cbind(2022) %>% setnames("V2", "Year")
# Remove anything between square brackets in Responses
surv_sat_f_health$Response = gsub("\\[.*\\]", "", surv_sat_f_health$Response)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_health$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_health[, Response := ordered(Response, levels = Response_unique_loc)]
# Make 2022 graph
surv_sat_f_health_graph <- make_surv_graph_facets(surv_sat_f_health, ncols=3, title_wrap = 40)
surv_sat_f_health_graph
## Time series graph
# Load in 2021, 2020 data
path_2021 = paste(c(dir_stub, "../data/Res survey/res_survey_2021_filt.xlsx"),collapse = '')
q029_21 = create_surv_q_df("Q029", path_2021)[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030_21 = create_surv_q_df("Q030", path_2021)[,Question:= "How anxious did you feel yesterday?"]
q031_21 = create_surv_q_df("Q031", path_2021)[,Question:= "How is your health in general?"]
path_2020 = paste(c(dir_stub, "../data/Res survey/res_survey_2020_filt.xlsx"),collapse = '')
q029_20 = create_surv_q_df("Q027", path_2020)[,Question:= "Overall, to what extent do you feel the things you do in your life are worthwhile?"]
q030_20 = create_surv_q_df("Q029", path_2020)[,Question:= "How anxious did you feel yesterday?"]
q031_20 = create_surv_q_df("Q030", path_2020)[,Question:= "How is your health in general?"]
surv_sat_f_health_21 <- rbind(q029_21, q030_21, q031_21) %>% cbind(2021) %>% setnames("V2", "Year")
surv_sat_f_health_20 <- rbind(q029_20, q030_20, q031_20) %>% cbind(2020) %>% setnames("V2", "Year")
surv_sat_f_health_all <- rbind(surv_sat_f_health, surv_sat_f_health_21, surv_sat_f_health_20)
surv_sat_f_health_all$Response = gsub("\\[.*\\]", "", surv_sat_f_health_all$Response)
surv_sat_f_health_all$Response = gsub(" -.*", "", surv_sat_f_health_all$Response) %>% trimws()
# Can't compare the 'how is your health is general' question over time as the responses have changed significantly. I will remove it from the time series.
surv_sat_f_health_all <- surv_sat_f_health_all[Question != "How is your health in general?"]
# Group together the 0123, 456, 78910 responses as generally high/med/low
surv_sat_f_health_all[, `Response group` := cut(as.numeric(Response), breaks=c(-1, 3, 6, 11), labels = c("Not at all / not much (0-3)", "Somewhat (4-6)", "Quite a lot / a lot (7-10)"))
]
Response_unique_loc_all <- unique(surv_sat_f_health_all$`Response group`)
surv_sat_f_health_all[, `Response group` := ordered(`Response group`, levels = Response_unique_loc_all)]
surv_sat_f_health_all_grp <- surv_sat_f_health_all[,.(`Percentage of respondents`=sum(`Percentage of respondents`)), by = c("Year","Question","Response group")]
# Graph for past three years
surv_sat_f_health_time_graph <- make_surv_graph_time_facets(surv_sat_f_health_all_grp, ncols=2, nrows=1, title_wrap = 40)
surv_sat_f_health_time_graph
ggplotly(surv_sat_f_health_time_graph)
# Cost of living survey results ----------------------------------------------------
# Cost of living Qs Q032
#Q4AY22_1
#Q4AY22_2
#Q4AY22_3
q032 = create_surv_q_df("Q032")
q4ay22_1 = create_surv_q_df("Q4AY22_1")
q4ay22_2 = create_surv_q_df("Q4AY22_2")
q4ay22_3 = create_surv_q_df("Q4AY22_3")
# Join all dataframes
surv_sat_f_cost <- rbind(q032, q4ay22_1, q4ay22_2, q4ay22_3)
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- rev(unique(surv_sat_f_cost$Response))
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_cost[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_cost_graph <- make_surv_graph_facets(surv_sat_f_cost, ncols=4, title_wrap = 35)
surv_sat_f_cost_graph
# Internet connection survey results ----------------------------------------------------
q038 <- create_surv_q_df("Q038")
# Join all dataframes
surv_sat_f_tintenet <- q038
surv_sat_f_tintenet$Question = gsub("^Q([^ ]+)  ", "", surv_sat_f_tintenet$Question) %>% trimws()
# Create a variable of the Response column with duplicates removed
Response_unique_loc <- unique(surv_sat_f_tintenet$Response)
# Make response an ordered factor with levels in the order of the Response column
surv_sat_f_tintenet[, Response := ordered(Response, levels = Response_unique_loc)]
surv_sat_f_tintenet = surv_sat_f_tintenet[Response != "At work"]
surv_sat_f_graph_tintenet <- make_surv_graph_facets(surv_sat_f_tintenet, ncols=5, title_wrap = 100)
surv_sat_f_graph_tintenet
#ggplotly(surv_sat_f_graph_tintenet)
